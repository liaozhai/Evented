{"version":3,"file":"main.js","sources":["../src/index.ts","../example/index.ts"],"sourcesContent":["export default class Evented implements EventTarget {\r\n    private listeners:{ [type:string]:EventListener[] } = {};\r\n    addEventListener(type: string, callback: EventListener) {\r\n        if(!(type in this.listeners)) {\r\n            this.listeners[type] = [];\r\n        }\r\n        this.listeners[type].push(callback);\r\n    }\r\n    on(type: string, callback: EventListener): this {\r\n        this.addEventListener(type, callback);\r\n        return this;\r\n    }\r\n    removeEventListener (type: string, callback: EventListener): undefined {\r\n        if(!(type in this.listeners)) {\r\n            return;\r\n        }\r\n        let stack = this.listeners[type];\r\n        for(let i = 0, l = stack.length; i < l; i++) {\r\n            if(stack[i] === callback){\r\n                stack.splice(i, 1);\r\n                return this.removeEventListener(type, callback);\r\n            }\r\n        }\r\n    }\r\n    off(type: string, callback: EventListener): this {\r\n        this.removeEventListener(type, callback);\r\n        return this;\r\n    }\r\n    dispatchEvent(event: Event): boolean {\r\n        if(!(event.type in this.listeners)) {\r\n            return false;\r\n        }\r\n        let stack = this.listeners[event.type];\r\n\t    Object.defineProperty(event, 'target', {\r\n            enumerable: false,\r\n            configurable: false,\r\n            writable: false,\r\n            value: this\r\n        });\r\n        for(let i = 0, len = stack.length; i < len; i++) {\r\n            stack[i].call(this, event);\r\n        }\r\n        return true;\r\n    }\r\n};","import Evented from '../src/index';\r\n\r\nclass Application extends Evented {\r\n    run() {\r\n        let event = document.createEvent('Event');\r\n        event.initEvent('run', false, false);\r\n        this.dispatchEvent(event);\r\n    }\r\n}\r\n\r\nwindow.addEventListener('load', () => {\r\n    const app = new Application();\r\n    app.on('run', () => console.log('Done!')).run();\r\n});"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAA;QAAA;YACY,cAAS,GAAqC,EAAE,CAAC;SA2C5D;QA1CG,kCAAgB,GAAhB,UAAiB,IAAY,EAAE,QAAuB;YAClD,IAAG,EAAE,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;gBAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;aAC7B;YACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACvC;QACD,oBAAE,GAAF,UAAG,IAAY,EAAE,QAAuB;YACpC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YACtC,OAAO,IAAI,CAAC;SACf;QACD,qCAAmB,GAAnB,UAAqB,IAAY,EAAE,QAAuB;YACtD,IAAG,EAAE,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;gBAC1B,OAAO;aACV;YACD,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACjC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACzC,IAAG,KAAK,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAC;oBACrB,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACnB,OAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;iBACnD;aACJ;SACJ;QACD,qBAAG,GAAH,UAAI,IAAY,EAAE,QAAuB;YACrC,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YACzC,OAAO,IAAI,CAAC;SACf;QACD,+BAAa,GAAb,UAAc,KAAY;YACtB,IAAG,EAAE,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;gBAChC,OAAO,KAAK,CAAC;aAChB;YACD,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC1C,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,QAAQ,EAAE;gBAChC,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,KAAK;gBACnB,QAAQ,EAAE,KAAK;gBACf,KAAK,EAAE,IAAI;aACd,CAAC,CAAC;YACH,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAC7C,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;aAC9B;YACD,OAAO,IAAI,CAAC;SACf;QACL,cAAC;IAAD,CAAC;;IC1CD;QAA0B,+BAAO;QAAjC;;SAMC;QALG,yBAAG,GAAH;YACI,IAAI,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAC1C,KAAK,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;YACrC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SAC7B;QACL,kBAAC;IAAD,CANA,CAA0B,OAAO,GAMhC;IAED,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE;QAC5B,IAAM,GAAG,GAAG,IAAI,WAAW,EAAE,CAAC;QAC9B,GAAG,CAAC,EAAE,CAAC,KAAK,EAAE,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAA,CAAC,CAAC,GAAG,EAAE,CAAC;IACpD,CAAC,CAAC;;;;;;"}